SMART TRAFFIC MODEL(SMT)--DEVELOPMENT JOURNAL
Week #1:
	Wednesday--February 4, 2015:
		Today I started drafting different traffic scenarios for different traffic light patterns. 		
		These scenarios will help me test my SMT and see if there has been ay improvement. The scenarios 	
		will also be displayed with my live demonstration, and I will compare them to the original 		
		stoplight designm by measuring time from Point A to Point B, the number of cars passing through the 
		light, the number of wrecks, and the amount of fuel used during the commute. I also started 
		researching intersection related accidents and current stoplight operations. I found out there has
		been an idea developing in Houston, Texas that is similair to my SMT. However, the plan is only in
		it's first stage (pilot), and hasn't been fully developed. Their algorithim is ran off of a Linux
		based computer and operates off of real time, taking data from nearby smartphones. Siemens also 
		plans on installing a GPS radio devices for first responders(i.e. ambulances and police officers)
		that will turn an upcoming stoplight green. Siemens also plans to implant an "IntelliDrive" concept	
		that will send real-time data between vehicles and traffic ligts, alerting the driver that there is 
		a stop ahead. In my research in stop light operation, I learned that there are many ways a 		
		stoplight changes. Some lights don't have any detectors. Rather, they simply operate on timers. The	
		detectors in a some stoplights vary from lasers to rubber hoses filled with air. However, the most	
		common method to detect cars is the inductive loop. An inductve loop is a coil of wire implanted	
		in the road's surface. When the car rolls over these rectangular-shaped deformities in the road,	
		the light is alerted that you are there, and may change green for you.
		Sources:
		http://auto.howstuffworks.com/car-driving-safety/safety-regulatory-devices/question234.htm
		http://www.siemens.com/innovation/apps/pof_microsite/_pof-spring-2011/_html_en/traffic-systems.html 
		 
Week #2:
	Monday--February 9, 2015
		Today I continued drafting different traffic scenarios for different traffic light patterns. See
		Wednesday, February 4, 2015 for details. I also updated my README for the Smart-Traffic-Model 
		repository to contain a more descriptive description than "This is a great project!". I've also 
		started brainstorming the outline of my code and thinking about how the code will work. Lastly
		today, I decided to continue to familiarize myself with GitHub by navigating around and researching
		websites that can possibly help me with understanding GitHub a little better. I'm starting to 
		understand some of the basics of GitHub now. I unfortunately had trouble uploading what I have done	
		to GitHub as I experienced some problems in GitBash. I'll look into that further when I get the 
		chance.
	
	Tuesday--February 10, 2015
		:)
		I was unable to work on the Smart Traffic Model. (I'm happy for a different reason)
	
	Wednesday--February 11, 2015
		Today I created a class named Tester to remind me to create a Tester class that will test my Smart
		Traffic Model. I haven't started to develop it yet, as I don't really have anything in my Smart
		Traffic Model class that needs to be tested. I also decided to work on an API with the methods that	
		clearly outlines what I need to work on instead of shooting in the dark. The API will also contain 	
		bits of the Proposal. Since I referece the Proposal quite often, I thought it would be a good idea	
		to stuff some of the Proposal in with the API so I don't have to switch between two Word Documents.
		I also continued drafting different traffic scenarios for differnt traffic light patterns. The 
		scenarios are currently on graph paper, although I may decide to see if I can transfer them on the 	
		computer if I have time, or if necessary. Still had trouble trying to update my updates to the 
		GitHub website. Hopefully figureing out that problem tomorrow. I also learned that you can import	
		java.util.Timer. This should be extremely helpful in my project when calculating the commuting time
	
	Thursday--February 12, 2015
		I was unable to work on the Smart Traffic Model.

	Friday--February 13, 2015
		Not a real productive day. Just looked at a whole bunch of websites concerning how stoplights
		operated and brainstormed more traffic scenarios. Couldn't update to GitHub.

	Saturday--February 14, 2015
		HAPPY VALENTINE'S DAY! <3
		I was unable to work on the Smart Traffic Model.

	Sunday--February 15, 2015
		I was unable to work on the Smart Traffic Model.

Week #3:

	Monday--February 16, 2015
		HAPPY PRESIDENT'S DAY! HAPPY BIRTHDAY WASHINGTON + LINCOLN! 
		Not a real productive day. Just looked at a whole bunch of websites concerning how stoplights
		operated and brainstormed more traffic scenarios. Still having trouble uploading to GitHub

	Tuesday--February 17, 2015
		I was unable to work on the Smart Traffic Model.

	Wednesday--February 18, 2015
		Today, I researched more into the java.util.Timer. Timer extends the Object class and also can run
		as a "daemon". It's methods include:
		
		1. void cancel()
			Terminates the timer, discarding any currently scheduled tasks.
		2. int purge()
			Removes all cancelled tasks from this timer's task queue. 
		3. void schedule(TimerTask task, Date time)
			Schedules the specified task for execution at the specified time.
		4. void schedule(TimerTask task, long delay)
			Schedules the specified task for execution after specified delay.
		5. void schedule(Timer task, lond delay, long period)
			Schedules the specified task for repeated fixed-delay execution, beginning at the specified
			time.
		6. void scheduleAtFixedRate(TimerTask task, Date firstTime, long period)
			Schedules the specified task for repeated fixed-rate execution, beginning at the specified
			time.
		7. void scheduleAtFixedRate(TimerTask task, long delay, long period)
			Schedules the specified task for repeated fixed-rate execution, beginning at the specified
			delay.
	
		The Timer class can throw the following exceptions: IllegalArgumentException, IllegalStateException
		, and NullPointerException.
		I also looked up what a "daemon" is. 
		A daemon is a divinity or supernatural being of a nature b/w gods and humans, according to ancient 	
		Greek belief. It is also the archaic spelling of demon. :)
		HAHAHAHAHAHA!!! Wouldn't that be nice! 
		A daemon is a computer program that runs as a background process, rather than being under the 
		direct control of an interective user. 
		I am not quite sure what the computer definition means; I'm still wrapping my head around that one.
		Sources:
		http://docs.oracle.com/javase/7/docs/api/java/util/Timer.html
	
	Thursday--February 19, 2015
		HAPPY CHINESE NEW YEAR! YEAR OF THE SHEEP/GOAT/RAM!
		Worked on code. I decided to have my project allow the user to decide what they want the scenario 
		to be like. The SMT asks for traffic flow. May add more questions? I'm working on organizing myself
		because I'm still unsure on how to code my project, even though I know what to do.
	
	Friday--February 20, 2015
		I was unable to work on the Smart Traffic Model.

	Saturday--February 21, 2015
		Today, I updated my code so that the program asks for the time of day instead of traffic flow.
		I figured that the time of day would affect the traffic flow with various rush hours. To determine
		the rush hours, I went on Google Maps and used their traffic link to show me at what times of day
		the traffic was the heaviest. I decided to use three levels of traffic flow: light, moderate, and 
		heavy. I also decided to use five different times of the day to determine traffic flow. These five 
		are: 

		1. morning(5:00 A.M. to 9:00 A.M) -- Heavy Traffic
		2. late morning/afternoon(9:00 A.M. to 2:00 P.M.) -- Light Traffic
		3. late afternoon(2:00 P.M. to 4:00 P.M.) -- Moderate Traffic
		4. evening(4:00 P.M. to 8:00 P.M.) -- Heavy Traffic
		5. night/early morning(8:00 P.M. to 4:00 A.M.) -- Light Traffic
		 
		I realize that each different time of day is not in equal increments with the hours. However, I was
		trying to ensure that the different times of the day is based off of traffic. I'm also working on 
		the methods that I call from inside the main(String[] args) method. Inside the main method, I 
		decided to print out the comparisons before the SMT and after the SMT inside each if statement. 
		
		I also have tried to no avail to upload to GitHub at home! :(
	
		Google Maps (25 Miles):
			Long Beach, CA
			Roberto 'Bobby' Salcedo Memorial Hwy & California 60, Rosemead, CA
		
	Sunday--February 22, 2015
		I was unable to work on the Smart Traffic Model.

Week #4:

	Monday--February 23, 2015
		I was unable to work on the Smart Traffic Model.

	Tuesday--February 24, 2015
		I was unable to work on the Smart Traffic Model.

	Wednesday--February 25, 2015
		Today, I slapped together a rough elevator pitch with a PowerPoint Presentation. All it talked
		were the pros and cons of stoplights and how the SMT fixed those problems. I also continued working
		on my code. It's developing fine, although I am at a loss on how to calculate the fuel usage/mpg.
		Still cannot update to GitHub with GitBash. I have, however, found a way to update without the 
		GitBash. I can edit online and commit online! Yay! No more GitBash for Me! I also updated my code
		on Saturday so that the program will print out the variables before and after the SMT. To do this
		I created two methods for each variable that needs calculated. One for before, and one for after.

	Thursday--February 26, 2015
		I updated my code, and added some spacing so the terminal window looks pretty. :)		

	Friday--February 27, 2015
		Today, I worked on my code.

	Saturday--February 28, 2015
		I researched more about the Timer class. I realized I don't think I need the Timer class after 		
		all... The Timer class is used if you want a certain method applied after a certain time interval, 	
		etc. However, I only needed to implement a timer to time how long theoretically a car would take 	
		using the SMT. Instead, I created two new state variables, distance and minutes. I was thinking I 
		could create a loop that would say if distance increases one mile, then minutes increases a few 
		minutes. I also used if loops for my measureGasMileage. if(trafficFlow == "light"), then gasUsed is
		[whatever amount of gas used].

	Sunday--March 1, 2015
		I was unable to work on the Smart Traffic Model.

Week #5:

	Monday--March 2, 2015
		I was unable to work on the Smart Traffic Model.

	Tuesday--March 3, 2015
		I was unable to work on the Smart Traffic Model.

	Wednesday--March 4, 2015
		I was unable to work on the Smart Traffic Model.

	Thursday--March 5, 2015
		I was unable to work on the Smart Traffic Model.		

	Friday--March 6, 2015
		The first deliverable is due today, although it seems I have surpassed my requirements. For March 6
		my requirements were to have drawn out several simulations. I have already done that and am 
		currently working on the April 3 Deliverables (actually code the algorithm). So far, my code
		is at the stage where it can successfully pull up the terminal window, ask a few questions and 
		store a couple variables without crashing. I have yet to come up with a legitimate way to calculate 
		some of my variables. I had a (rare) but nice 30-minute talk with my brother about ideas to 
		calculate these variables, and he gave me some brilliant advice. I hope to implement them soon.

	Saturday--March 7, 2015
		I was unable to work on the Smart Traffic Model.

	Sunday--March 8, 2015
		I was unable to work on the Smart Traffic Model.

Week #6:
	
	Monday--March 9, 2015
		I was unable to work on the Smart Traffic Model.

	Tuesday--March 10, 2015
		I was unable to work on the Smart Traffic Model.

	Wednesday--March 11, 2015
		I was unable to work on the Smart Traffic Model.

	Thursday--March 12, 2015
		Today I started fixing my method that measures gas mileage, using the advice my brother gave me.
		He suggested that I calculate the gas mileage for all green lights and add on time for every red
		light. 
